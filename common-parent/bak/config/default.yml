#SpringCloud 2.X
management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /
  endpoint:
    health:
      show-details: always

# Logger config
logging:
  config: classpath:log4j2/log4j2-dev.xml
  level:
    com.alibaba.nacos.client.config.impl: WARN

# ====================MybatisPlus====================
mybatis:
  mapper-locations: "classpath*:com/zxkj/**/mapper/*.xml"

##feign sentinel
feign:
  sentinel:
    enabled: false
  hystrix:
    enabled: true
  httpclient:
    enabled: false
    max-connections: 200
    max-connections-per-route: 20
  okhttp:
    enabled: true
####超时时间(feign和ribbon同时配置，feign优先级高所以会覆盖ribbon配置；如果超时时间高于hystrix会报错HystrixTimer异常，否则报ReadTimeOut异常)
  #feign超时时间
#   client:
#     config:
#       default:
#         connect-timeout: 2000
#         read-timeout: 2000

#hystrix超时时间
hystrix:
  threadpool:
    default:
      coreSize: 10 #并发执行的最大线程数，默认10
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 4000

#ribbon的超时时间
ribbon:
  eager-load:
    enabled: true
    #clients: cart-service,goods-service,seckill-service,order-service
  ConnectTimeout: 3000
  ReadTimeout: 3000
  MaxAutoRetries: 0 #同一台实例最大重试次数,不包括首次调用
  MaxAutoRetriesNextServer: 0 #重试负载均衡其他的实例最大重试次数,不包括首次调用
  OkToRetryOnAllOperations: false  #是否所有操作都重试
  MaxConnectionsPerHost: 5000
  MaxTotalConnections: 50000

spring:
  client:
    healthcheck:
      enabled: true #开启健康检查（需要spring-boot-starter-actuator依赖）
  # 上传文件大小限制
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  #定义一致时间格式
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: non_null
    time-zone: GMT+8
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
  cloud:
    config:
      override-none: true
      allow-override: true
      override-system-properties: false
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        namespace: b3f308b2-f9d1-4495-81a2-d808539a5db2
        metadata:
          management:
            context-path: /
    sentinel:
      eager: true
      transport:
        dashboard: 127.0.0.1:8888
      datasource:
        ds1:
          nacos:
            server-addr: 127.0.0.1:8848
            namespace: b3f308b2-f9d1-4495-81a2-d808539a5db2
            group-id: SENTINEL_GROUP
            data-type: json
            data-id: flow-rules-${spring.application.name}.json
            rule-type: flow
        ds2:
          nacos:
            server-addr: 127.0.0.1:8848
            namespace: b3f308b2-f9d1-4495-81a2-d808539a5db2
            group-id: SENTINEL_GROUP
            data-type: json
            data-id: degrade-rules-${spring.application.name}.json
            rule-type: degrade

  ###zipkin
  zipkin:
    discoveryClientEnabled: false
    sender:
      type: kafka
    kafka:
      topic: myZipkin
  sleuth:
    enabled: false
    messaging:
      jms:
        enabled: false
    sampler:
      probability: 0.2 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集
  ###rocketmq
  rocketmq:
    producer:
      maxMessageSize: 4096
      sendMsgTimeout: 3000
      retryTimesWhenSendFailed: 2
    consumer:
      groupName: myRocket
      namesrvAddr: 127.0.0.1:9876
      consumeThreadMin: 20
      consumeThreadMax: 64
      consumeMessageBatchMaxSize: 1
  ###rabbitmq
  rabbitmq:
    addresses: localhost:5672
    username: root
    password: 123456
    virtual-host: /
    connection-timeout: 15000
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3


  ###kafka
  kafka:
    bootstrap-servers: 172.17.53.138:9092
    producer:
      acks: 1
      retry.count: 2147483647
      retry.backoff.ms: 100
      retry.max.in.flight.requests.per.connection: 1
      linger.ms: 30
      batch.size: 16384
      buffer.memory: 33554432
      max.request.size: 1048576
    consumer:
      enable.auto.commit: false
      auto.commit.interval: 1000
      auto.offset.reset: latest
      session.timeout.ms: 30000
      heartbeat.interval.ms: 9000
      group.id: default_consumer_group #群组ID
      max.poll.records: 2
      max.poll.interval.ms: 30000
    listener:
      concurrency: 1

  ###activemq
  activemq:
    broker-url: tcp://127.0.0.1:61616
    user: admin
    password: admin
  data:
    ###mongodb
    mongodb:
      uri: mongodb://127.0.0.1:27017/test
    ###elasticsearch
    elasticsearch:
      cluster-name: my-application
      cluster-nodes: 127.0.0.1:9300
      repositories:
        enabled: true

##Redis
redis:
  cluster:
    address: 192.168.10.241:7000,192.168.10.241:7001,192.168.10.241:7002,192.168.10.241:7003,192.168.10.241:7004,192.168.10.241:7005
  sentinel:
    master: redis-master
    nodes: 192.168.10.241:25379
  single:
    ip: 127.0.0.1
    port: 6379
  password: foobared
  timeout: 6000
  maxTotal: 30
  maxIdle: 30
  minIdle: 5
  maxWaitMillis: 1000
  maxRedirections: 5

xxl:
  job:
    accessToken: ''
    executor:
      appname: ${spring.application.name}
      logpath: /opt/logs/job/jobhandler/
      logretentiondays: 1
      port: ${server.port}
    admin:
      addresses: http://127.0.0.1:8765/xxl-job-admin,http://127.0.0.1:8766/xxl-job-admin

