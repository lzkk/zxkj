数据结构的三个方面：
  数据的逻辑结构：
      线性结构：
          线性表
          栈
          队列
          串与数组
      非线性结构：
          树形结构
          图形结构
  数据的存储结构：
      顺序存储
      链式存储
      索引存储
      散列存储
  数据的运算：
      检索
      排序
      插入
      删除
      修改

########################################
数据结构
    数组(Array)
    栈(Stack)
    队列(Queue)
    链表(Linked List)
    树(Tree)
    堆(Heap)
    图(Graph)
    散列(哈希)表(Hash)

数组：
  可以再内存中连续存储多个元素的结构
栈：
  一种特殊的线性表，仅能在线性表的一端操作
队列：
  与栈一样，也是一种线性表，但队列可以在一端添加元素，在另一端取出元素
链表：
  物理存储单元上非连续的、非顺序的存储结构
  分为：单链表、循环链表、双向链表
树：
  树是由结点和边组成的不存在任何环的一种数据结构(由n个有限节点组成一个具有层次关系的集合)。
  满二叉树：除最后一层无任何子节点外，每一层上的所有结点都有两个子结点。即除叶子结点外的所有结点均有两个子结点。
  完全二叉树：假设树的深度为h，除第 h 层外，其它各层的结点数都达到最大个数，第h层所有的结点都连续集中在最左边。
  二叉查找树：又叫作二叉搜索树、二叉排序树等。它是一个二叉树结构，并且满足左子节点值小于根节点值，右子节点值大于根节点值；添加节点时需要找到合适的位置，在删除节点时，如果是非叶子节点，需要调整树结构，使保持二叉搜索树特性；某些情况下它有可能退化成一个有n个节点的线性链。
  平衡二叉树：当且仅当任何节点的两棵子树的高度差不大于1的二叉树，也叫AVL树。
  红黑树：一种自平衡的二叉查找树。
堆:
  一种比较特殊的数据结构，可以被看做一棵树的数组对象。
图:
  由结点的有穷集合和边的集合组成
哈希表：
  也叫散列表，是根据键和值直接进行访问的数据结构